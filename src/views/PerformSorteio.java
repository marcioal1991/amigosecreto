/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dao.SorteioDB;
import dao.SorteioParticipanteDB;
import dao.SorteioParticipanteResultadoDB;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import model.Sorteio;
import model.SorteioParticipanteResultado;
import model.SorteioParticipante;

/**
 *
 * @author marcio
 */
public class PerformSorteio extends javax.swing.JFrame {

    int id;
    Sorteio sorteio;
    SorteioParticipanteResultadoDB SPRDB = new SorteioParticipanteResultadoDB();
    /**
     * Creates new form PerformSorteio
     */
    public PerformSorteio(int id) {
        initComponents();
        this.id = id;
        SorteioDB sorteioDB = new SorteioDB();
        this.sorteio = sorteioDB.selectOne(this.id);
        this.jLabelNomeSorteio.setText(this.sorteio.getNome());
        this.fillTable();
    }
    
    public PerformSorteio() {
        initComponents();
        SorteioDB partDB = new SorteioDB();
    }

    private void fillTable() {
        ArrayList<SorteioParticipanteResultado> list = this.SPRDB.selectAllFromSorteio(this.sorteio);
        
        DefaultTableModel model = (DefaultTableModel) this.jTableResultado.getModel();
        
        for (SorteioParticipanteResultado s:list) {
            Object[] data = {
                s.getId(), 
                s.getParticipanteDe().getNome(), 
                s.getParticipantePara().getNome()
            };
            
            model.addRow(data);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelNomeSorteio = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResultado = new javax.swing.JTable();
        jButtonPerformSorteio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome");

        jTableResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "De", "Para"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableResultado);

        jButtonPerformSorteio.setText("Sortear");
        jButtonPerformSorteio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerformSorteioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabelNomeSorteio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonPerformSorteio)
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelNomeSorteio)
                    .addComponent(jButtonPerformSorteio))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPerformSorteioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerformSorteioActionPerformed
        this.SPRDB.deleteAllFromSorteio(this.sorteio);
        
        DefaultTableModel model = (DefaultTableModel) this.jTableResultado.getModel();
        
        model.setRowCount(0);
        
        SorteioParticipanteDB SPDB = new SorteioParticipanteDB();
        ArrayList<SorteioParticipante> sorteios_participantes = SPDB.selectAllFromSorteio(this.sorteio);
        
        Collections.shuffle(sorteios_participantes);
        int size = sorteios_participantes.size() - 1;
        
        
        for (int counter = 0; counter < size; counter++) {
            SorteioParticipanteResultado SPR = new SorteioParticipanteResultado();
            SPR.setIdSorteio(this.sorteio.getId());
            SPR.setIdParticipanteDe(sorteios_participantes.get(counter).getIdParticipante());
            SPR.setIdParticipantePara(sorteios_participantes.get(counter + 1).getIdParticipante());
            this.SPRDB.insert(SPR);
        }
        
        SorteioParticipanteResultado SPR = new SorteioParticipanteResultado();
        SPR.setIdSorteio(this.sorteio.getId());
        SPR.setIdParticipantePara(sorteios_participantes.get(0).getIdParticipante());
        SPR.setIdParticipanteDe(sorteios_participantes.get(sorteios_participantes.size() - 1).getIdParticipante());

        this.SPRDB.insert(SPR);
           
        this.fillTable();
    }//GEN-LAST:event_jButtonPerformSorteioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PerformSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PerformSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PerformSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PerformSorteio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PerformSorteio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPerformSorteio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelNomeSorteio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableResultado;
    // End of variables declaration//GEN-END:variables
}
